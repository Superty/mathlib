/-
Copyright (c) 2022 Cuma Kรถkmen. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Cuma Kรถkmen, Yury Kudryashov
-/
import measure_theory.integral.interval_integral

/-!
# Integral over a torus in `โโฟ` and (n-dim) Cauchy Integral Formula?

In this file we will define in `torus_integrable` the integrability of functions
`f : โโฟ โ E` over a torus, where `E` is a Banach Space with second countable topology
and we will give the definition of an integral over a torus in `torus_integral`, being the
`โข`-product of the derivative of `torus_map` and `f (torus_map)`.
We will also prove the integrability of this product as well as prove some other basic
properties for both definitions.
The main goal will be

## Main definitions

* `torus_map c R`: the generalized multidimensional exponential map from $โโฟ โ โโฟ$ defined
  as $ฮธ โฆ c_i + R_ie^{ฮธ_i * i}$, with $R โ โโฟ$;

* `torus_integrable f c R`: a function `f : โโฟ โ E` is integrable over the generalized torus
  with center `c โ โโฟ` and radius `R โ โโฟ` if `f โ torus_map c R` is integrable on the
  closed set `Icc (0 : โโฟ) (ฮป _, 2 * ฯ)`;

* `torus_integral f c R`: the integral of a function `f : โโฟ โ E` over a torus with
  center `c โ โโฟ` and radius `R โ โโฟ` defined as
  $\int_{[0, 2 * ฯ]} (โ_{i = 1}^{n} I * R_i * e^{ฮธ_i * i}) โข f (c + Re^{ฮธ_i * i})\,dฮธ_i$;

## Main statements

-/

variable {n : โ+}
variables {E : Type*} [measurable_space E] [normed_group E]

noncomputable theory

open complex set measure_theory function filter topological_space
open_locale real big_operators

local notation `โโฟ`:= fin n โ โ
local notation `โโฟ`:= fin n โ โ

/-!
### `torus_map`, a generalization of a torus
-/

/-- The n dimensional exponential map $ฮธ_i โฆ c + R e^{ฮธ_i*I}, ฮธ โ โโฟ$ representing
a torus in `โโฟ` with center `c โ โโฟ` and generalized radius `R โ โโฟ`, so we can adjust
it to every n axis. -/
def torus_map (c : โโฟ) (R : โโฟ) : โโฟ โ โโฟ :=
  ฮป ฮธ i, c i + R i * exp(ฮธ i * I)

lemma periodic_torus_map (c : โโฟ) (R : โโฟ) : periodic (torus_map c R) (ฮป _, 2 * ฯ) :=
begin
  intro ฮธ,
  rw torus_map,
  simp [add_mul, exp_periodic _],
end

lemma torus_map_sub_center (c : โโฟ) (R : โโฟ) (ฮธ : โโฟ) :
  torus_map c R ฮธ - c = torus_map 0 R ฮธ :=
begin
  rw [torus_map, torus_map],
  dsimp,
  ext i,
  simp,
  simp,
end

lemma torus_map_eq_center_iff {c : โโฟ} {R : โโฟ} {ฮธ : โโฟ} :
  torus_map c R ฮธ = c โ R = 0 :=
begin
  simp [funext_iff, torus_map, exp_ne_zero],
end

@[simp] lemma torus_map_zero_radius (c : โโฟ) : torus_map c 0 = const โโฟ c :=
begin
  ext ฮธ i,
  repeat {conv_lhs {rw torus_map_eq_center_iff.2}},
end

/-!
### Integrability of a function on a generalized torus
-/

/--A function `f : โโฟ โ E` is integrable on the generalized torus if the function
`f โ torus_map c R ฮธ` is integrable on `Icc (0 : โโฟ) (ฮป _, 2 * ฯ)`-/
def torus_integrable (f : โโฟ โ E) (c : โโฟ) (R : โโฟ) : Prop :=
  integrable_on (ฮป (ฮธ : โโฟ), f (torus_map c R ฮธ)) (Icc (0 : โโฟ) (ฮป _, 2 * ฯ)) volume

--Constant functions are torus integrable
lemma torus_integrable_const (a : E) (c : โโฟ) (R : โโฟ) :
  torus_integrable (ฮป _, a) c R :=
begin
  simp [torus_integrable, measure_Icc_lt_top],
end

--If `f` is torus integrable then `-f` is torus integrable
lemma neg [borel_space E] {f : โโฟ โ E} {c : โโฟ} {R : โโฟ} (hf : torus_integrable f c R) :
  torus_integrable (-f) c R := hf.neg

--Addition `f + g` of two torus integrable functions `f, g` is torus integrable
lemma add [borel_space E] [second_countable_topology E]
  {f g : โโฟ โ E} {c : โโฟ} {R : โโฟ} (hf : torus_integrable f c R) (hg : torus_integrable g c R) :
  torus_integrable (f + g) c R := hf.add hg

lemma torus_integrable_zero_radius {f : โโฟ โ E} {c : โโฟ} :
  torus_integrable f c 0 :=
begin
  rw [torus_integrable, torus_map_zero_radius],
  apply torus_integrable_const (f c) c 0,
end

/--The function given in the definition of `torus_integral` is integrable-/
lemma function_integrable [borel_space E] [normed_space โ E] [second_countable_topology E]
  (f : โโฟ โ E) (c : โโฟ) (R : โโฟ) (hf : torus_integrable f c R) :
  integrable_on (ฮป (ฮธ : โโฟ), (โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ))
                (Icc (0 : โโฟ) (ฮป _, 2 * ฯ)) volume :=
begin
  refine (hf.norm.const_mul (โ i, |R i|)).mono' _ _,
  { apply ae_measurable.smul,
    { apply continuous.ae_measurable,
    exact continuous_finset_prod finset.univ
    (ฮป (i : fin โn) (H : i โ finset.univ),
    continuous_const.mul
      (continuous_exp.comp ((is_R_or_C.continuous_of_real.comp (continuous_apply i)).mul continuous_const))) },
  exact hf.1 },
  simp [norm_smul, map_prod],
end

variables [borel_space E] [normed_space โ E] [second_countable_topology E] [complete_space E]

/--The definition of the integral over a generalized torus with center `c โ โโฟ` and radius `R โ โโฟ`
as the `โข`-product of the derivative of `torus_map` and `f (torus_map c R ฮธ)`-/
def torus_integral (f : โโฟ โ E) (c : โโฟ) (R : โโฟ) :=
  โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), (โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ)

lemma torus_integral_radius_zero (f : โโฟ โ E) (c : โโฟ) :
  torus_integral f c 0 = 0 :=
begin
  simp [torus_integral],
end

lemma torus_integral_neg {f : โโฟ โ E} {c : โโฟ} {R : โโฟ} :
  -torus_integral f c R = torus_integral (-f) c R :=
begin
  repeat {rw torus_integral},
  simp,
  rw โ integral_neg,
end

lemma torus_integral_add {f g : โโฟ โ E} {c : โโฟ} {R : โโฟ}
  (hf : torus_integrable f c R) (hg : torus_integrable g c R) :
  โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ),
  (โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ) + (โ i, I * R i * exp(ฮธ i * I)) โข g (torus_map c R ฮธ)
  = (โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), (โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ))
  + (โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), (โ i, I * R i * exp(ฮธ i * I)) โข g (torus_map c R ฮธ)) :=
begin
  apply integral_add _ _,
  exact function_integrable f c R hf,
  exact function_integrable _ _ _ hg,
end

lemma torus_integral_add' {f g : โโฟ โ E} {c : โโฟ} {R : โโฟ}
  (hf : torus_integrable f c R) (hg : torus_integrable g c R) :
  torus_integral (f + g) c R = torus_integral f c R + torus_integral g c R :=
begin
  repeat {rw torus_integral},
  simp [mul_add],
  exact torus_integral_add hf hg,
end

lemma torus_integral_sub {f g : โโฟ โ E} {c : โโฟ} {R : โโฟ}
  (hf : torus_integrable f c R) (hg : torus_integrable g c R) :
  โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ),
  (โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ) - (โ i, I * R i * exp(ฮธ i * I)) โข g (torus_map c R ฮธ)
  = (โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), (โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ))
  - (โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), (โ i, I * R i * exp(ฮธ i * I)) โข g (torus_map c R ฮธ)) :=
begin
  rw [sub_eq_add_neg, โ torus_integral, โ torus_integral,
      torus_integral_neg, โ torus_integral_add' hf (neg hg), torus_integral],
  simp [smul_add, sub_eq_add_neg],
end

lemma torus_integral_smul {๐ : Type*} [is_R_or_C ๐] [normed_space ๐ E]
  (a : ๐) (f : โโฟ โ E) (c : โโฟ) (R : โโฟ) :
  โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), a โข ((โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ))
  = a โข โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), (โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ) :=
begin
  exact integral_smul _ _,
end

lemma torus_integral_const_mul (a : โ) (f : โโฟ โ โ) (c : โโฟ) (R : โโฟ) :
  โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), a * ((โ i, I * R i * exp(ฮธ i * I)) * f (torus_map c R ฮธ))
  = a * โซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), (โ i, I * R i * exp(ฮธ i * I)) * f (torus_map c R ฮธ) :=
begin
  exact torus_integral_smul a f c R,
end

/--If for all `ฮธ : โโฟ`, `โฅf (torus_map c R ฮธ)โฅ` is less than or equal to a constant `C : โ`, then
`โฅโซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), (โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ)โฅ`
is less than or equal to `(2 * ฯ)^n * (โ i, |R i|) * C`-/
lemma norm_integral_le_of_norm_le_const {f : โโฟ โ E} {c : โโฟ} {R : โโฟ} {C : โ}
  (hf : โ ฮธ, โฅf (torus_map c R ฮธ)โฅ โค C) :
  โฅโซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ), (โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ)โฅ
    โค (2 * ฯ)^(n: โ) * (โ i, |R i|) * C :=
begin
  have h1 : โฅโซ (ฮธ : โโฟ) in Icc (0 : โโฟ) (ฮป _, 2 * ฯ),
             (โ i, I * R i * exp(ฮธ i * I)) โข f (torus_map c R ฮธ)โฅ
             โค (โ i, |R i|) * C * (volume (Icc (0 : โโฟ) (ฮป _, 2 * ฯ))).to_real,
  { apply norm_set_integral_le_of_norm_le_const' _ _ _,
   exact measure_Icc_lt_top,
   exact measurable_set_Icc,
   { intros x h2,
    simp [norm_smul],
    apply mul_le_mul_of_nonneg_left (hf x) _,
    apply multiset.prod_induction _ _ _ _ _,
    { intros a b ha hb,
     exact mul_nonneg ha hb },
    exact zero_le_one,
    { intros a ha,
     simp at ha,
     cases ha with i ha,
     rw โ ha,
     apply _root_.abs_nonneg } } },
  rw real.volume_Icc_pi_to_real _ at h1,
  { simp at h1,
   rw [mul_comm (โ i, |R i|) C, mul_assoc] at h1,
   rwa [mul_comm ((2 * ฯ)^(n : โ) * โ i, |R i|) C, mul_comm ((2 * ฯ)^(n : โ)) (โ i, |R i|)] },
  refine pi.le_def.mpr _,
  intro i,
  apply le_of_lt,
  exact real.two_pi_pos,
end
